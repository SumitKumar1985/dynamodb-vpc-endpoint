AWSTemplateFormatVersion: 2010-09-09
Description: Provisions a VPC endpoint for DynamoDB and demonstrates the use of the same

Resources:
  dynamoDBWriteRole:
    Type: AWS::IAM::Role
    DependsOn: demoTable
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        -
          PolicyName: writer
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Resource: !Join [ "", [ "arn:aws:dynamodb:", !Ref 'AWS::Region', ":", !Ref 'AWS::AccountId', ":", 'table/*' ] ]
                Action:
                  - dynamodb:PutItem
                  - dynamodb:DescribeTable
                  - dynamodb:CreateTable
                  - dynamodb:UpdateTimeToLive

  instanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        -
          Ref: dynamoDBWriteRole
  vpcEndpointForDynamoDB:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      RouteTableIds:
        - Ref: routeTable
      ServiceName: !Join [ "", [ "com.amazonaws.", !Ref 'AWS::Region', ".dynamodb" ]]
      VpcId:
        Ref: VpcId
  demoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: id
          KeyType: HASH
        - AttributeName: expireAt
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: expireAt
          AttributeType: N
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TimeToLiveSpecification:
        AttributeName: expireAt
        Enabled: true
  subnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: routeTable
      SubnetId:
        Ref: privateSubnet
  routeTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VpcId
  privateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VpcId
      CidrBlock:
        Ref: SubnetCidrBlock

Parameters:
  VpcId:
    Description: Id for VPC
    Type: AWS::EC2::VPC::Id
  SubnetCidrBlock:
    Description: CIDR Block to assign to the subnet
    Type: String
    Default: 172.31.192.0/28

Mappings:
  RegionMap:
    ap-south-1:
      AMI: ami-47205e28
    us-east-1:
      AMI: ami-a4c7edb2
    us-east-2:
      AMI: ami-8a7859ef
    us-west-1:
      AMI: ami-327f5352
    us-west-2:
      AMI: ami-6df1e514
    ca-central-1:
      AMI: ami-a7aa15c3
    eu-west-1:
      AMI: ami-d7b9a2b1
    eu-west-2:
      AMI: ami-ed100689
    eu-central-1:
      AMI: ami-82be18ed
    ap-southeast-1:
      AMI: ami-77af2014
    ap-southeast-2:
      AMI: ami-10918173
    ap-northeast-2:
      AMI: ami-e21cc38c
    ap-northeast-1:
      AMI: ami-3bd3c45c
    sa-east-1:
      AMI: ami-87dab1eb

