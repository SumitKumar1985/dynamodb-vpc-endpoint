{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Provisions a VPC endpoint for DynamoDB, and launches a demo app on EC2 to demonstrate the same",
  "Parameters": {
    "VpcId": {
      "Description": "VPC to launch the endpoint and the demo app",
      "Type": "AWS::EC2::VPC::Id"
    },
    "SubnetCidrBlock": {
      "Description": "CIDR block to assign to the subnet launched for the demo app",
      "Type": "String",
      "Default": "172.31.192.0/28"
    }
  },
  "Resources": {
    "demoTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "expireAt",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "expireAt",
            "AttributeType": "N"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TimeToLiveSpecification": {
          "AttributeName": "expireAt",
          "Enabled": true
        }
      }
    },
    "dynamoDBWriteRole": {
      "Type": "AWS::IAM::Role",
      "DependsOn": "demoTable",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "writer",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:dynamodb:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":table/",
                        {
                          "Ref": "demoTable"
                        }
                      ]
                    ]
                  },
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:DescribeTable",
                    "dynamodb:CreateTable",
                    "dynamodb:UpdateTimeToLive"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "instanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "dynamoDBWriteRole"
          }
        ]
      }
    },
    "appInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "IamInstanceProfile": {
          "Ref": "instanceProfile"
        },
        "SubnetId": {
          "Ref": "privateSubnet"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "dynamodb-writer-app"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe \n",
                "sudo -u ec2-user aws configure set region ",
                {
                  "Ref": "AWS::Region"
                },
                " \n",
                "echo '#!/usr/bin/env bash' >> /tmp/put_items.sh\n",
                "echo 'set -euxo pipefail'>> /tmp/put_items.sh\n",
                "echo 'NOW_IN_MINUTES=$(date +%Y%m%dT%H%M%z)' >> /tmp/put_items.sh\n",
                "echo 'EPOCH_TIME=$(date +%s)' >> /tmp/put_items.sh\n",
                "echo 'ONE_DAY_LATER=$(($EPOCH_TIME+86400))' >> /tmp/put_items.sh\n",
                "echo 'item={\\\"id\\\":{\\\"S\\\":\\\"$NOW_IN_MINUTES\\\"},\\\"expireAt\\\":{\\\"N\\\":\\\"$ONE_DAY_LATER\\\"},\\\"hostname\\\":{\\\"S\\\":\\\"$(hostname)\\\"}}' >> /tmp/put_items.sh\n",
                "echo 'echo $item > item.json' >> /tmp/put_items.sh\n",
                "echo 'aws --region ",
                {
                  "Ref": "AWS::Region"
                },
                " dynamodb put-item --table-name ",
                {
                  "Ref": "demoTable"
                },
                " --item file://item.json' >> /tmp/put_items.sh\n",
                "cp /tmp/put_items.sh /home/ec2-user/put_items.sh\n",
                "echo '* * * * * /home/ec2-user/put_items.sh' > /home/ec2-user/crontab.entry\n",
                "chown ec2-user:ec2-user /home/ec2-user/* \n",
                "chmod u+x /home/ec2-user/*.sh \n",
                "crontab -u ec2-user /home/ec2-user/crontab.entry\n"
              ]
            ]
          }
        }
      }
    },
    "vpcEndpointForDynamoDB": {
      "Type": "AWS::EC2::VPCEndpoint",
      "Properties": {
        "RouteTableIds": [
          {
            "Ref": "routeTable"
          }
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".dynamodb"
            ]
          ]
        },
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "privateSubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "CidrBlock": {
          "Ref": "SubnetCidrBlock"
        }
      }
    },
    "routeTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        }
      }
    },
    "subnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "routeTable"
        },
        "SubnetId": {
          "Ref": "privateSubnet"
        }
      }
    }
  },
  "Mappings": {
    "RegionMap": {
      "ap-south-1": {
        "AMI": "ami-47205e28"
      },
      "us-east-1": {
        "AMI": "ami-a4c7edb2"
      },
      "us-east-2": {
        "AMI": "ami-8a7859ef"
      },
      "us-west-1": {
        "AMI": "ami-327f5352"
      },
      "us-west-2": {
        "AMI": "ami-6df1e514"
      },
      "ca-central-1": {
        "AMI": "ami-a7aa15c3"
      },
      "eu-west-1": {
        "AMI": "ami-d7b9a2b1"
      },
      "eu-west-2": {
        "AMI": "ami-ed100689"
      },
      "eu-central-1": {
        "AMI": "ami-82be18ed"
      },
      "ap-southeast-1": {
        "AMI": "ami-77af2014"
      },
      "ap-southeast-2": {
        "AMI": "ami-10918173"
      },
      "ap-northeast-2": {
        "AMI": "ami-e21cc38c"
      },
      "ap-northeast-1": {
        "AMI": "ami-3bd3c45c"
      },
      "sa-east-1": {
        "AMI": "ami-87dab1eb"
      }
    }
  }
}